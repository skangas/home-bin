#!/usr/bin/perl
#
# photorename -- this script renames all photos under cwd and recursively from
# arbitrary filenames to filenames reflecting the moment they were shot. this is
# based on the EXIF information contained in the photo
#
#########################################################################
#
# Copyright Â© 2007 Stefan Kangas <stefan@marxist.se>
#
#########################################################################
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#########################################################################

use warnings;
use strict;
use File::Finder;
#die "Nothing to do." unless @_;

my $find = File::Finder->left->name('*.[Jj][Pp][Gg]')->or->name('*.[Jj][Pp][Ee][Gg]')->right;
$find->type('f')->print;

my @files;

if (@ARGV) {
    for my $path (@ARGV) {
	print "searching $path...\n";
	@files = $find->in($path);
    }
}
else {
    print "searching CWD...\n";
    @files = $find->in('.');
}

for my $file (@files) {
    next unless -e $file;
    my @path = split /\//, $file;
    my $old_filename = pop @path;
    my $path = join "/", @path;

    print "$path/$old_filename -> ";
    
    # get information
    my $fulldate = join " ", grep /0x9003/, `exiftran -d "$file"`;
    next unless defined $fulldate;

    $fulldate =~ /(\d{4}:\d{2}:\d{2} \d{2}:\d{2}:\d{2})/;
    $fulldate = $1;
    my ($date, $time) = split /\s/, $fulldate;
    next unless defined $date && defined $time;

    # format the new new_filename
    $date = join "-", split /:/, $date;
    $time = join "",  split /:/, $time;
    my $basename = join "_", $date, $time;
    my $new_filename = $basename . '.jpg';

    
    if ( $old_filename eq $new_filename ) {
	print "ok!\n";
	next;
    }

    # don't replace an existing file
    my $count;
    while ( -e "$path/$new_filename" ) {
	$new_filename = $basename . '_' . $count++ . '.jpg';
	if ( $old_filename eq $new_filename ) {
	    print "ok!\n";
	    next;
	}
    }

    # rename
    print "$path/$new_filename\n";
    rename $file, "$path/$new_filename";
}

