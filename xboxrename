#!/usr/bin/perl

# xboxrename -- rename files into something that is accepted by the Xbox file
# system (XFAT)
#
##
#
# Copyright © 2005-2010 Stefan Kangas <skangas@skangas.se>
#
##
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

use 5.010;
use warnings;
use strict;
use utf8;
use encoding ':locale';

use Getopt::Long;
use Path::Class;

my $directory;
my $execute;

GetOptions(
    'directory=s'  => \$directory,
    'execute'    => \$execute,
);

if (defined $directory) {
    chdir $directory;
} 

for my $name (glob "*") {
    # Since glob doesn't use utf8 by default we need to explicitly upgrade here
    # in addition to using encoding above
    utf8::upgrade($name);

    next unless -f $name or -d $name;
    
    my $newname = mk_xbox_name($name);

    if ( $name ne $newname && ! -e $newname ) {
        printf("%s -> %s\n", $name, $newname);
        if ($execute) {
            rename $name, $newname;
        }
    }
}

sub mk_xbox_name {
    my ($name) = @_;

    ### NOTE: Order of the regexps matter

    ### 1 --- REMOVE ILLEGAL CHARACTERS
    
    # Convert swedish characters
    $name =~ s/[åä]/a/g;
    $name =~ s/ö/o/g;

    # Remove some shit
    $name =~ s/\(\w+\)       ### remove parens
               |[^[:ascii:]] ### remove everything outside ASCII
               |[²'`´,]      ### remove some other weird characters
               |\n|\r|\t     ### remove newline or tab shouldn't be in filename
               #|\s+          ### remove whitespace
              //msxg;

    ### 2 --- REMOVE WORDS IN BRACKETS
    
    $name =~ s/((\[.+?\])+)//;
    my $brackets = $&;
    $brackets = "" if not defined $brackets;

    ### 3 --- STRIP THE EXTENSION OF A FILE

    my $ext;
    if (not -d $name) {
        # strip it
	$ext = (split /[.]/, $name)[-1];
	$name =~ s/\.$ext$//;

        # make extension prettier
	$ext = lc $ext;
	$ext =~ s/mpeg/mpg/;
    }

    ### 4 --- ADDITIONAL CLEANUP
    
    my $delimiter = '[\s_.]';

    # Remove duplicate word delimiters
    $name =~ s/($delimiter)+/$1/g;

    # Remove leading and trailing word delimiters 
    $name =~ s/\A$delimiter+
           |$delimiter+\z
              //msxg;

    # Remove delimiters around dash
    $name =~ s/$delimiter-$delimiter/-/g;

    # remove trailing dot
    $name =~ s!\.$!!;

    ### 5 --- MAKE NEW NAME
    
    if (-d $name) {
        ### directory
	return sprintf('%.42s', $name);
    } else {
        ### file

        ### put brackets back at the end of too long strings
        $name .= $brackets;
        my $maxlen = 42 - length($ext) - 1; # - 1 for the '.' character
        if (length $name > $maxlen) {
            substr $name, $maxlen - length $brackets, length $brackets, $brackets;
        }

        return join ".", substr($name, 0, $maxlen), $ext;
    }
}
